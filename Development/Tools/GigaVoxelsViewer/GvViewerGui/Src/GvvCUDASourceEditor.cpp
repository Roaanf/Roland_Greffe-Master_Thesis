/*
 * GigaVoxels - GigaSpace
 *
 * Website: http://gigavoxels.inrialpes.fr/
 *
 * Contributors: GigaVoxels Team
 *
 * Copyright (C) 2007-2015 INRIA - LJK (CNRS - Grenoble University), All rights reserved.
 */

/** 
 * @version 1.0
 */

#include "GvvCUDASourceEditor.h"

/******************************************************************************
 ******************************* INCLUDE SECTION ******************************
 ******************************************************************************/

// Viewer
#include "GvvCUDASyntaxHighlighter.h"

/******************************************************************************
 ****************************** NAMESPACE SECTION *****************************
 ******************************************************************************/

// GvViewer
using namespace GvViewerGui;

/******************************************************************************
 ************************* DEFINE AND CONSTANT SECTION ************************
 ******************************************************************************/

/******************************************************************************
 ***************************** TYPE DEFINITION ********************************
 ******************************************************************************/

/******************************************************************************
 ***************************** METHOD DEFINITION ******************************
 ******************************************************************************/


/******************************************************************************
 * Default constructor
 ******************************************************************************/
GvvCUDASourceEditor::GvvCUDASourceEditor( QWidget* pWidget )
:	QWidget( 0, 0 )
{
	_ui.setupUi( this );

	GvvCUDASyntaxHighlighter* lHighLight = new GvvCUDASyntaxHighlighter( _ui._textEdit->document() );

	connect( _ui._applyButton, SIGNAL( clicked() ), this, SLOT( onApply() ) );
	connect( _ui._compileButton, SIGNAL( clicked() ), this, SLOT( onCompile() ) );

	setAcceptDrops( true );
}

/******************************************************************************
 * Apply action
 ******************************************************************************/
void GvvCUDASourceEditor::onApply()
{
}

/******************************************************************************
 * Compile action
 ******************************************************************************/
void GvvCUDASourceEditor::onCompile()
{
}
