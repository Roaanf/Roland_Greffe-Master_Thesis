////////////////////////////////////////////////////////////////////////////////
//
// VERTEX SHADER
//
// On-the-fly voxelization
//
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// VERSION
////////////////////////////////////////////////////////////////////////////////

#version 400

////////////////////////////////////////////////////////////////////////////////
// INPUT
////////////////////////////////////////////////////////////////////////////////

// Vertex position
layout (location = 0) in vec3 iPosition;

// Vertex normal
layout (location = 1) in vec3 iNormal;

////////////////////////////////////////////////////////////////////////////////
// UNIFORM
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// OUTPUT
////////////////////////////////////////////////////////////////////////////////

// Output data structure
out Data
{
	// Normal
	vec3 normal;

	// Position
	vec3 worldPosition;

} oData;

////////////////////////////////////////////////////////////////////////////////
// PROGRAM
////////////////////////////////////////////////////////////////////////////////
void main()
{
	// Output untransformed normal
	oData.normal = iNormal;

	// Output untransformed position
	oData.worldPosition = iPosition;

	// Transform vertex to clip space
	gl_Position = vec4( iPosition, 1.0 );
}
