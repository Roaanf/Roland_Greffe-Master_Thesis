////////////////////////////////////////////////////////////////////////////////
//
// VERTEX SHADER
//
// ...
//
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// VERSION
////////////////////////////////////////////////////////////////////////////////

//#version 400

////////////////////////////////////////////////////////////////////////////////
// INPUT
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// UNIFORM
////////////////////////////////////////////////////////////////////////////////

// Light position
uniform vec3 lightPos;

////////////////////////////////////////////////////////////////////////////////
// OUTPUT
////////////////////////////////////////////////////////////////////////////////

// Position and normal in View coordinates system
varying vec3 point;
varying vec3 normal;

////////////////////////////////////////////////////////////////////////////////
// PROGRAM
////////////////////////////////////////////////////////////////////////////////
void main()
{
	// Pass position and normal in View coordinates system
	point = vec3( gl_ModelViewMatrix * gl_Vertex );
	normal = gl_NormalMatrix * gl_Normal;
	
	// Send position to Clip space with its attributes (color, texture coordinate)
	gl_Position = gl_ModelViewProjectionMatrix * gl_Vertex;
	gl_FrontColor = gl_Color;
	gl_TexCoord[ 0 ].xy = gl_MultiTexCoord0.xy;
}
