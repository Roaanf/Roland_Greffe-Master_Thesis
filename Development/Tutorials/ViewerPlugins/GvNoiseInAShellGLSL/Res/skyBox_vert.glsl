////////////////////////////////////////////////////////////////////////////////
//
// VERTEX SHADER
//
// Sky box rendering
//
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// VERSION
////////////////////////////////////////////////////////////////////////////////

#version 400

////////////////////////////////////////////////////////////////////////////////
// INPUT
////////////////////////////////////////////////////////////////////////////////

// Vertex position in Object space
layout (location = 0) in vec3 VertexPosition;

////////////////////////////////////////////////////////////////////////////////
// UNIFORM
////////////////////////////////////////////////////////////////////////////////

// Model View Projection matrix
uniform mat4 uModelViewMatrix;
uniform mat4 uProjectionMatrix;
uniform mat4 uModelViewProjectionMatrix;

////////////////////////////////////////////////////////////////////////////////
// OUTPUT
////////////////////////////////////////////////////////////////////////////////

// Vertex position in Object space
out vec3 ObjectVertexPosition;

////////////////////////////////////////////////////////////////////////////////
// PROGRAM
////////////////////////////////////////////////////////////////////////////////
void main()
{
	// Pass object space vertex positions
	ObjectVertexPosition = VertexPosition;

	// Send vertex position to Clip space
	//gl_Position = uModelViewProjectionMatrix * vec4( VertexPosition, 1.0 );
	gl_Position = uProjectionMatrix * uModelViewMatrix * vec4( VertexPosition, 1.0 );
}
