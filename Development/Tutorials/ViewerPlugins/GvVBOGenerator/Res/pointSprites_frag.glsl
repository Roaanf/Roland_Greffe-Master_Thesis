////////////////////////////////////////////////////////////////////////////////
//
// FRAGMENT SHADER
//
// Point Sprites (texture mapped quads)
//
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// VERSION
////////////////////////////////////////////////////////////////////////////////

#version 400

////////////////////////////////////////////////////////////////////////////////
// INPUT
////////////////////////////////////////////////////////////////////////////////

// Texture coordinate
in vec2 TexCoord;

////////////////////////////////////////////////////////////////////////////////
// UNIFORM
////////////////////////////////////////////////////////////////////////////////

// Texture sampler for point rendering (star, etc...)
uniform sampler2D SpriteTex;

// Background color
uniform vec4 BackgroundColor;

////////////////////////////////////////////////////////////////////////////////
// OUTPUT
////////////////////////////////////////////////////////////////////////////////

layout (location = 0) out vec4 FragColor;

////////////////////////////////////////////////////////////////////////////////
// PROGRAM
////////////////////////////////////////////////////////////////////////////////
void main()
{
	vec4 spriteColor = texture( SpriteTex, TexCoord );
	
	//if ( ( spriteColor.r > 0.4 ) && ( spriteColor.g > 0.4 ) && ( spriteColor.b > 0.5 ) )
	if ( ! ( ( spriteColor.r > 0.2 ) && ( spriteColor.g > 0.2 ) && ( spriteColor.b > 0.5 ) ) )
	{
		//spriteColor.a = 0.0;
		discard;
	}
	
	//FragColor = mix( spriteColor, BackgroundColor, spriteColor.a );
	FragColor = spriteColor;
}
